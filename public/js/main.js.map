{"version":3,"names":[],"mappings":"","sources":["main.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\"use strict\";\n\nVue.component('eventlistelement', {\n  // declare the props\n  props: [\"index\", \"event\"],\n  // propiedad declarada con camelCase permite pasarla como\n  // camel-case = \"Algo\"\n  // like data, the prop can be used inside templates and\n  // is also made available in the vm as this.message\n  template: \"<div>\\n                          \\n                                                            <v-divider v-if=\\\"index>0\\\" v-bind:inset=\\\"inset\\\"></v-divider>\\n                                                            <v-list-tile\\n                                                                avatar\\n                                                                :key=\\\"event.id\\\"\\n                                                                >\\n                                                              <v-list-tile-content>\\n                                                                <v-list-tile-title>{{getHour(event.init)}} - {{getHour(event.end)}}</v-list-tile-title>\\n                                                                <v-list-tile-sub-title v-html=\\\"event.description\\\"></v-list-tile-sub-title>\\n                                                                <v-list-tile-sub-title>\\n\\n\\n                                                                  <v-chip>\\n                                                                    <v-avatar>\\n                                                                      <img src=\\\"https://randomuser.me/api/portraits/men/34.jpg\\\" :alt=\\\"event.user.name\\\">\\n                                                                    </v-avatar>\\n                                                                    {{event.user.name}}\\n                                                                  </v-chip>\\n\\n\\n                                                              </v-list-tile-sub-title>\\n                                                              </v-list-tile-content>\\n                                                            <v-list-tile-action>\\n                                                            <v-list-tile-action-text>{{ getDiff(event.init,event.end) }}</v-list-tile-action-text>\\n                                                      <menuEditEventFloating\\n                                                      :initial-event=\\\"event\\\"\\n                                                      ></menuEditEventFloating>\\n                                                            </v-list-tile-action>\\n</v-list-tile>    </div>\\n        \",\n  // data is technically a function, so Vue won't\n  // complain, but we return the same object\n  // reference for each component instance\n  data: function data() {\n    return {\n      imgUserDefault: '/img/user_default.png',\n      inset: true\n    };\n  },\n  // whenever question changes, this function will run\n  computed: {},\n  methods: {\n\n    getHour: function getHour(date) {\n      return moment(date).format('hh:mm a');\n    },\n    getDiff: function getDiff(init, end) {\n      var difh = moment(end).diff(moment(init), 'hours');\n      var difm = moment(end).diff(moment(init), 'minutes');\n      if (difm == 1) {\n        return difh + ' minuto';\n      }\n      if (difm < 60) {\n        return difm + ' minutos';\n      }\n      if (difh == 1) {\n        return difh + ' hora';\n      }\n      return difh + ' horas';\n    }\n\n  }\n\n});\n\n},{}],2:[function(require,module,exports){\n'use strict';\n\n/*global Vue*/\n/*global Child*/\n/*global moment*/\nVue.component('controlmonth', {\n    props: [\"displayedMonthDate\"],\n    template: '\\n        <v-container class=\"pa-0\" fluid>\\n            <v-layout>\\n                <v-flex xs12 sm12>\\n                    <v-container class=\"pa-0\" fluid>\\n                        <v-layout>\\n                            <v-flex xs10>\\n                                <v-container class=\"pa-0\">\\n                                    <v-layout row wrap>\\n                                        <v-flex offset-xs3 offset-sm3 xs1 sm1 class=\"pl-4\">\\n                                            <v-btn v-on:click=\"emitDown\" fab small dark class=\"indigo text-xs-center\">\\n                                                <v-icon dark>remove</v-icon>\\n                                            </v-btn>\\n                                        </v-flex>\\n                                        <v-flex xs3 sm3 class=\"pt-3\">\\n                                            <p class=\"text-xs-center title\">{{displayedMonthDate.format(\"MMMM YYYY\")}}</p>\\n                                        </v-flex>\\n                                        <v-flex xs1 sm1>\\n                                            <v-btn v-on:click=\"emitUp\" fab small dark class=\"indigo\">\\n                                                <v-icon dark>add</v-icon>\\n                                            </v-btn>\\n                                        </v-flex>\\n                                    </v-layout>\\n                                </v-container>\\n                            </v-flex>\\n                        </v-layout>\\n                    </v-container>    \\n                </v-flex>\\n            </v-layout>\\n        </v-container>',\n    computed: {},\n    methods: {\n        emitUp: function emitUp() {\n            this.$emit('upMonth');\n        },\n        emitDown: function emitDown() {\n            this.$emit('downMonth');\n        }\n    }\n});\n\n},{}],3:[function(require,module,exports){\n\"use strict\";\n\n/*global Vue*/\n/*global Child*/\n/*global moment*/\nVue.component('daybox', {\n  // declare the props\n  props: [\"isToday\", \"isDisplayedMonth\", \"isCurrentMonth\", \"day\", \"eventsDay\"],\n  // propiedad declarada con camelCase permite pasarla como\n  // camel-case = \"Algo\"\n  // like data, the prop can be used inside templates and\n  // is also made available in the vm as this.message\n  template: \"<v-card v-bind:class=\\\"{ 'indigo lighten-4': isDisplayedMonth, 'blue lighten-4': isCurrentMonth}\\\" height=\\\"80px\\\" style=\\\"padding: 2px\\\">\\n                            <v-card-text  class=\\\"pa-0\\\">\\n                                                <p v-if=\\\"isToday==true\\\" class='text-xs-right'><b>{{Number(day.format('DD')).toString()}}\\n                                                </b></p>                                                \\n                                                <p v-else class=\\\"text-xs-right\\\">{{Number(day.format('DD')).toString()}}</p>                                      \\n                                                <embebedlistevent\\n                                                  :is-today=\\\"isToday\\\"\\n                                                  :day=\\\"day\\\"\\n                                                  :events-day=\\\"eventsDay\\\"\\n                                                >\\n                                                </embebedlistevent>  \\n                                                \\n                            </v-card-text>\\n                </v-card>\",\n  // data is technically a function, so Vue won't\n  // complain, but we return the same object\n  // reference for each component instance\n  computed: {},\n  methods: {}\n});\n\n},{}],4:[function(require,module,exports){\n\"use strict\";\n\nVue.component('embebedlistevent', {\n\n  props: [\"isToday\", \"day\", \"eventsDay\"],\n  template: \"<div class=\\\"text-xs-center\\\" > \\n                                                <v-dialog class=\\\"text-xs-center\\\" v-model=\\\"dialog\\\" persistent width=\\\"600px\\\">\\n                                                  <div class=\\\"text-xs-center\\\" slot=\\\"activator\\\">\\n                                                <span slot=\\\"activator\\\" v-if=\\\"eventsDay.length>0\\\" class='text-xs-center'> \\n                                                  <v-chip class=\\\"indigo white--text\\\">\\n                                                    <v-avatar class=\\\"blue accent-1\\\">\\n                                                      <v-icon>storage</v-icon>\\n                                                    </v-avatar>\\n                                                    eventos&nbsp <b>{{eventsDay.length}}</b>\\n                                                  </v-chip>\\n                                                </span>                                            \\n\\n\\n                                                 </div>\\n                                                <v-card>\\n                                                   <v-toolbar class=\\\"blue darken-2\\\" dark>\\n                                                             <v-toolbar-title>{{modalHeader}}</v-toolbar-title>\\n                                                   </v-toolbar>\\n                                                  <v-card-text>\\n                                                 \\n                                                  <v-list three-line>\\n                                                    <template v-for=\\\"(event, index) in eventsDay\\\">                                                       \\n                                                    <eventlistelement\\n                                                      :event=\\\"event\\\"\\n                                                      :index=\\\"index\\\"\\n                                                      >\\n\\n                                                    </eventlistelement>\\n\\n                                                    </template>\\n                                                    </v-list>\\n                                                  </v-card-text>\\n                                                  <v-card-actions>\\n                                                    <v-spacer></v-spacer>\\n                                                     <v-btn class=\\\"blue--text darken-1\\\" flat=\\\"flat\\\" @click.native=\\\"dialog = false\\\">Cerrar</v-btn>\\n                                                  </v-card-actions>\\n                                                </v-card>\\n                                              </v-dialog>\\n</div>\",\n\n  computed: {},\n  methods: {},\n\n  data: function data() {\n    var textEventProgramed = this.day.format('dddd DD - MMMM - YYYY');\n    var modalHeaderText = this.isToday ? 'Hoy' : textEventProgramed;\n    return {\n      modalHeader: modalHeaderText,\n      dialog: false\n    };\n  }\n});\n\n},{}],5:[function(require,module,exports){\n'use strict';\n\nVue.component('menuEditEventFloating', {\n  props: ['initialEvent'],\n  template: '<v-menu\\n                                                                  offset-x\\n                                                                  :close-on-content-click=\"false\"\\n                                                                  :nudge-width=\"500\"\\n                                                                  v-model=\"menu\"\\n                                                                  :left=\"true\"\\n                                                                    \\n                                                             \\n                                                               >\\n\\n                                                                     <v-icon\\n                                                                      class=\"clikeable blue--text text--lighten-1\"\\n                                                                      v-if=\"menu\"\\n                                                                      ripple\\n                                                                      slot=\"activator\"\\n                                                                      >edit\\n                                                                    </v-icon>\\n\\n                                                                    <v-icon\\n                                                                      class=\"clikeable gray--text text--darken-2\"\\n                                                                      v-else\\n                                                                      ripple\\n                                                                      slot=\"activator\"\\n                                                                    >edit\\n\\n                                                                    </v-icon>\\n\\n                                                                  <v-card>\\n                                                                    <v-list>\\n                                                                      <v-list-tile>\\n                                                                        <v-list-tile-content>\\n                                                                          <v-list-tile-title>Creado por</v-list-tile-title>\\n                                                                          <v-list-tile-sub-title>{{event.user.name}}</v-list-tile-sub-title>\\n                                                                        </v-list-tile-content>\\n                                                                        <v-list-tile-action>\\n                                                                          <v-btn\\n                                                                            icon\\n                                                                            :class=\"deleting ? \\'red--text\\' : \\'\\'\"\\n                                                                            @click=\"deleteEvent()\"\\n                                                                          >\\n                                                                            <v-icon v-if=\"deleting===false\">delete</v-icon>\\n                                                                            <v-progress-circular v-else indeterminate color=\"danger\"></v-progress-circular>\\n                                                                          </v-btn>\\n                                                                        </v-list-tile-action>\\n                                                                      </v-list-tile>\\n                                                                    </v-list>\\n                                                                    <v-divider></v-divider>\\n                                                                    <v-list>\\n                                                                      <v-spacer class=\"spacer-10p\"></v-spacer>\\n                                                                      <v-list-tile>\\n                                                                        <v-text-field\\n                                                                          label=\"Descripcion\"\\n                                                                          :value=\"event.description\"\\n                                                                          :counter=\"250\"\\n                                                                          required\\n                                                                        ></v-text-field>\\n                                                                      </v-list-tile>\\n                                                                        <v-spacer class=\"spacer-10p\"></v-spacer>\\n                                                                      <v-list-tile>\\n\\n\\n<v-dialog\\n        persistent\\n        v-model=\"modalDate\"\\n        lazy\\n        full-width\\n      >\\n        <v-text-field\\n          slot=\"activator\"\\n          label=\"Fecha de inicio\"\\n          :value=\"date\"\\n          prepend-icon=\"event\"\\n          readonly\\n        ></v-text-field>\\n        <v-date-picker v-model=\"date\" scrollable actions>\\n          <template scope=\"{ save, cancel }\">\\n            <v-card-actions>\\n              <v-spacer></v-spacer>\\n              <v-btn flat color=\"primary\" @click=\"cancel\">Cancelar</v-btn>\\n              <v-btn flat color=\"primary\" @click=\"save\">Guardar</v-btn>\\n            </v-card-actions>\\n          </template>\\n        </v-date-picker>\\n      </v-dialog>\\n\\n                                                                      </v-list-tile>\\n\\n\\n\\n                                                                    </v-list>\\n                                                                    <v-card-actions>\\n                                                                      <v-spacer></v-spacer>\\n                                                                      <v-btn flat @click=\"onCancel()\">Cancel</v-btn>\\n                                                                      <v-btn v-if=\"saving\" primary flat disabled><v-progress-circular indeterminate color=\"primary\"></v-progress-circular></v-btn>\\n                                                                      <v-btn v-else primary flat @click=\"onSave()\">Save</v-btn>\\n                                                                    </v-card-actions>\\n                                                                  </v-card>\\n                                                                </v-menu>',\n  data: function data() {\n    return {\n      event: this.initialEvent,\n      deleting: false,\n      menu: false,\n      message: false,\n      hints: true,\n      saving: false,\n      menuDate: false,\n      modalDate: false,\n      date: moment(this.initialEvent).format('YYYY-MM-DD')\n    };\n  },\n  methods: {\n    deleteEvent: function deleteEvent() {\n      this.deleting = true;\n    },\n    onSave: function onSave() {\n      this.saving = true;\n    },\n    onCancel: function onCancel() {\n      this.menu = false;\n    }\n  }\n\n});\n\n},{}],6:[function(require,module,exports){\n\"use strict\";\n\n/*global Vue*/\n/*global Child*/\n/*global moment*/\nVue.component('monthcalendar', {\n    // declare the props\n    props: [\"initialOffsetMonth\", \"initialOffsetDay\", \"initialOffsetWeek\", \"initialEvents\"],\n    // propiedad declarada con camelCase permite pasarla como\n    // camel-case = \"Algo\"\n    // like data, the prop can be used inside templates and\n    // is also made available in the vm as this.message\n    template: \"\\n        <div>\\n            <controlmonth\\n            :displayed-month-date=momentNowOffset\\n            v-on:upMonth=\\\"addMonth\\\"\\n            v-on:downMonth=\\\"downMonth\\\"\\n            >\\n            </controlmonth>\\n            <v-container fluid class=\\\"pa-0\\\">\\n                <v-layout>\\n                    <v-flex xs12 sm12>\\n                        <v-container fluid class=\\\"pa-0\\\">\\n                            <v-layout>\\n                                <v-flex xs10>\\n                                    <v-container fluid grid-list-md>\\n                                        <v-layout row wrap v-for=\\\"n in 6\\\" :key=\\\"n\\\">\\n                                            <v-flex v-if=\\\"n==1\\\" style=\\\"width: 14.28%\\\" v-for=\\\"i in 7\\\" :key=\\\"i\\\">\\n                                                <v-card style=\\\"padding: 2px\\\">\\n                                                    <v-card-text style=\\\"padding: 0px\\\" primary-title>\\n                                                        <div>\\n                                                            <h1 class=\\\"text-xs-center headline mb-0\\\">{{momentNow.day(i).format('dddd')}}</h1>\\n                                                        </div>\\n                                                    </v-card-text>\\n                                                </v-card>\\n                                            </v-flex>\\n                                            <v-flex v-if=\\\"n>=1\\\" style=\\\"width: 14.28%\\\" v-for=\\\"i in 7\\\" :key=\\\"i\\\">\\n                                                <daybox\\n                                                :is-today=isToday(i,n)\\n                                                :is-current-month=isCurrentMonth(i,n)\\n                                                :is-displayed-month=isDisplayedMonth(i,n)\\n                                                :day=getActualDay(i,n)\\n                                                :events-day=getEventsDay(i,n)  \\n                                                >\\n                                                </daybox>\\n                                            </v-flex>\\n                                        </v-layout>\\n                                    </v-container>    \\n                                </v-flex>\\n                            </v-layout>\\n                        </v-container>\\n                    </v-flex>\\n                </v-layout>\\n            </v-container>\\n        </div>\\n        \",\n    // data is technically a function, so Vue won't\n    // complain, but we return the same object\n    // reference for each component instance\n    data: function data() {\n        return {\n            offsetMonth: this.initialOffsetMonth,\n            offsetDay: this.initialOffsetDay,\n            offsetWeek: this.initialOffsetWeek,\n            events: this.initialEvents\n        };\n    },\n    updated: function updated() {\n        console.log(\"se actualizo algun dato\");\n    },\n    computed: {\n        momentNow: function momentNow() {\n            return new moment();\n        },\n        momentNowOffset: function momentNowOffset() {\n            return new moment().add(this.offsetMonth, 'month').add(this.offsetDay, 'days').add(this.offsetWeek, 'weeks');\n        },\n        momentFirstDayOfCurrentMonth: function momentFirstDayOfCurrentMonth() {\n            var localmomentNowOffset = new moment().add(this.offsetMonth, 'month').add(this.offsetDay, 'days').add(this.offsetWeek, 'weeks');\n            var auxDate = localmomentNowOffset.add(-localmomentNowOffset.format('DD') + 1, 'days');\n            return auxDate;\n        },\n        momentStartToPrint: function momentStartToPrint() {\n            var localmomentNowOffset = new moment().add(this.offsetMonth, 'month').add(this.offsetDay, 'days').add(this.offsetWeek, 'weeks');\n            var auxDate = localmomentNowOffset.add(-localmomentNowOffset.format('DD') + 1, 'days');\n            var auxInitDay = auxDate.day();\n            var auxDateStart = auxDate.add(-auxDate.day(), 'days');\n            if (auxInitDay == 0) {\n                auxDateStart = auxDateStart.add(-1, 'weeks');\n            }\n            return auxDateStart;\n        }\n    },\n    methods: {\n        getEventsDay: function getEventsDay(i, n) {\n            var actualDay = this.getActualDay(i, n);\n            var events = [];\n            this.events.forEach(function (event) {\n                var eventDate = moment(event.init);\n                if (moment(actualDay).isSame(eventDate, 'day')) {\n                    events.push(event);\n                }\n            });\n            return events;\n        },\n        addMonth: function addMonth() {\n\n            this.getEventsDisplayedMonth(1);\n        },\n        getEventsDisplayedMonth: function getEventsDisplayedMonth(addMinus) {\n            var self = this;\n            var offsetMonth = self.offsetMonth + addMinus;\n            axios({\n                method: 'get',\n                url: 'http://calendario-guillermogaete49199007.codeanyapp.com/events/' + offsetMonth\n            }).then(function (response) {\n                var events = response.data;\n                self.events = response.data;\n                self.offsetMonth = offsetMonth;\n            }).catch(function (error) {\n                console.log(error);\n            });\n        },\n        downMonth: function downMonth() {\n            this.getEventsDisplayedMonth(-1);\n        },\n        isToday: function isToday(i, n) {\n            var auxDateStart = this.getActualDay(i, n);\n            if (moment().isSame(auxDateStart, 'day')) {\n                return true;\n            } else {\n                return false;\n            }\n        },\n        isCurrentMonth: function isCurrentMonth(i, n) {\n            var auxDateStart = this.getActualDay(i, n);\n            if (moment().isSame(auxDateStart, 'month')) {\n                return true;\n            } else {\n                return false;\n            }\n        },\n        isDisplayedMonth: function isDisplayedMonth(i, n) {\n            if (moment(this.getActualDay(i, n)).isSame(this.momentNowOffset, 'month')) {\n                return true;\n            } else {\n                return false;\n            }\n        },\n        getActualDay: function getActualDay(i, n) {\n            var localoffsetday = i + (n - 1) * 7;\n            var localmomentNowOffset = new moment().add(this.offsetMonth, 'month').add(this.offsetDay, 'days').add(this.offsetWeek, 'weeks');\n            var auxDate = localmomentNowOffset.add(-localmomentNowOffset.format('DD') + 1, 'days');\n            var auxInitDay = auxDate.day();\n            var auxDateStart = auxDate.add(-auxDate.day(), 'days');\n            if (auxInitDay == 0) {\n                auxDateStart = auxDateStart.add(-1, 'weeks');\n            }\n            auxDateStart = auxDateStart.add(localoffsetday, 'days');\n            return auxDateStart;\n        }\n    }\n});\n\n},{}]},{},[2,1,3,6,4,5]);\n"],"file":"main.js"}